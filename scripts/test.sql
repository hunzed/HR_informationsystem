SET SERVEROUTPUT ON;

-- Call the LOGIN_CHECK function
DECLARE
  VALID_LOGIN VARCHAR2(10);
BEGIN
  VALID_LOGIN := LOGIN_CHECK('grub', '789ghi');
  DBMS_OUTPUT.PUT_LINE('Valid login: ' || VALID_LOGIN);

END;

-- Call the GET_USERNAME function - should LOGIN_CHECK first  
SELECT GET_USERNAME() FROM DUAL;

--Inserting a new employee 
INSERT INTO EMPLOYEE (EMP_ID,ENAME, POSITION_TYPE, GENDER, SALARY, DOB, HIREDATE, COMM, DNAME) VALUES
(290, 'Rii Roxas','HR','F',23000,'04-FEB-2002','19-FEB-2023', NULL,'RESEARCH');

CREATE PROCEDURE INSERT_EMPLOYEE(emp_id IN NUMBER, ename IN VARCHAR2, position_type IN VARCHAR2, gender IN VARCHAR2, 
salary IN NUMBER, dob IN DATE, hiredate IN DATE, comm IN NUMBER, dname IN VARCHAR2)
IS
BEGIN
  INSERT INTO EMPLOYEE (EMP_ID, ENAME, POSITION_TYPE, GENDER, SALARY, DOB, HIREDATE, COMM, DNAME)
  VALUES (emp_id, ename, position_type, gender, salary, dob, hiredate, comm, dname);
END;



--Remvoving an Employee
DELETE FROM EMPLOYEE WHERE EMP_ID = 290;

CREATE PROCEDURE REMOVE_EMPLOYEE(emp_id IN NUMBER)
IS
BEGIN
  DELETE FROM EMPLOYEE WHERE EMP_ID = emp_id;
END;


--Update the Salary
UPDATE EMPLOYEE SET SALARY = 25000 WHERE EMP_ID = 290;

CREATE PROCEDURE UPDATE_SALARY(emp_id IN NUMBER, new_salary IN NUMBER)
IS
BEGIN
  UPDATE EMPLOYEE SET SALARY = new_salary WHERE EMP_ID = emp_id;
END;



--Search by Employee number to retrieve information about his/her Allowances
SELECT ALLOWANCE.ALLOWANCE_TYPE, ALLOWANCE.AM0UNT
FROM EMPLOYEE
JOIN POS_ALL ON EMPLOYEE.POSITION_TYPE = POS_ALL.POSITION_TYPE
JOIN ALLOWANCE ON POS_ALL.ALLOWANCE_TYPE = ALLOWANCE.ALLOWANCE_TYPE
WHERE EMPLOYEE.EMP_ID = 111;

CREATE FUNCTION GET_EMPLOYEE_ALLOWANCES(emp_id IN NUMBER)
RETURN SYS_REFCURSOR
IS
  v_result SYS_REFCURSOR;
BEGIN
  OPEN v_result FOR
    SELECT ALLOWANCE.ALLOWANCE_TYPE, ALLOWANCE.AM0UNT
    FROM EMPLOYEE
    JOIN POS_ALL ON EMPLOYEE.POSITION_TYPE = POS_ALL.POSITION_TYPE
    JOIN ALLOWANCE ON POS_ALL.ALLOWANCE_TYPE = ALLOWANCE.ALLOWANCE_TYPE
    WHERE EMPLOYEE.EMP_ID = emp_id;
    
  RETURN v_result;
END;
